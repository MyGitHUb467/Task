trigger:
- main  # Adjust this to your main branch name

pool:
  vmImage: 'windows-latest'

steps:
- checkout: self

- script: |
    REM Download Terraform zip file
    curl -o terraform.zip https://releases.hashicorp.com/terraform/1.1.0/terraform_1.1.0_windows_amd64.zip

    REM Create Terraform directory
    mkdir "%ProgramFiles%\Terraform"

    REM Extract Terraform zip file using 7-Zip
    7z x terraform.zip -o"%ProgramFiles%\Terraform"

    REM Add Terraform directory to PATH
    set "PATH=%ProgramFiles%\Terraform;%PATH%"

    REM Verify Terraform installation
    terraform --version
  displayName: 'Install Terraform'

- task: TerraformTaskV1@0
  displayName: 'Terraform Validate'
  inputs:
    command: 'validate'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: TerraformTaskV1@0
  displayName: 'Terraform Plan'
  inputs:
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    environmentServiceNameAzureRM: 'FirstPipeline'
    deploymentScope: 'Resource Group'
    deploymentScopeSelector: 'resourceGroupName'
    subscriptionId: '74f18b4b-73a2-49ee-a8b5-9e6f8c8ec835'
    resourceGroupName: 'Dev'
    terraformVersion: 'latest'
    commandOptions: '-out=tfplan'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'tfplan'
    publishLocation: 'pipeline'

- task: TerraformTaskV1@
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    environmentServiceNameAzureRM: 'FirstPipeline'
    deploymentScope: 'Resource Group'
    deploymentScopeSelector: 'resourceGroupName'
    subscriptionId: '74f18b4b-73a2-49ee-a8b5-9e6f8c8ec835'
    resourceGroupName: 'Dev'
    terraformVersion: 'latest'
    commandOptions: '-auto-approve'

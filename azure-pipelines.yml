trigger:
- main  # Adjust this to your main branch name

pool:
  vmImage: 'windows-latest'

steps:
- checkout: self

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- task: TerraformTaskV1@0
  displayName: 'Terraform Validate and Plan'
  inputs:
    command: 'validate'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    backendServiceArm: 'YourAzureServiceConnectionName'
    backendAzureRmResourceGroupName: 'YourTerraformBackendResourceGroupName'
    backendAzureRmStorageAccountName: 'YourStorageAccountName'
    backendAzureRmContainerName: 'YourStorageContainerName'
    backendAzureRmKey: 'YourStorageBlobKey'

- task: TerraformTaskV1@0
  displayName: 'Terraform Plan'
  inputs:
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    environmentServiceNameAzureRM: 'FirstPipeline'
    deploymentScope: 'Resource Group'
    deploymentScopeSelector: 'resourceGroupName'
    subscriptionId: '74f18b4b-73a2-49ee-a8b5-9e6f8c8ec835'
    resourceGroupName: 'Dev'
    terraformVersion: 'latest'
    commandOptions: '-out=tfplan'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'tfplan'
    publishLocation: 'pipeline'

- task: TerraformTaskV1@0
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    deploymentScope: 'Resource Group'
    deploymentScopeSelector: 'resourceGroupName'
    subscriptionId: '74f18b4b-73a2-49ee-a8b5-9e6f8c8ec835'
    resourceGroupName: 'Dev'
    terraformVersion: 'latest'
    commandOptions: '-auto-approve'
